{"version":3,"sources":["Lobby.js","Participant.js","Room.js","Annyang.js","SharedDesk.jsx","VideoChat.js","App.js","serviceWorker.js","index.js"],"names":["Lobby","username","handleUsernameChange","roomName","handleRoomNameChange","handleSubmit","onSubmit","htmlFor","type","id","value","onChange","required","Participant","participant","useState","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","useEffect","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","audioTrack","className","identity","ref","autoPlay","muted","Room","token","setTalk","handleLogout","talk","room","setRoom","participants","setParticipants","participantConnected","prevParticipants","participantDisconnected","p","Video","connect","name","then","forEach","currentRoom","localParticipant","state","tracks","trackPublication","stop","disconnect","remoteParticipants","key","sid","onClick","style","margin","display","annyang","start","abort","resume","commands","addCommands","engineCallback","resultCallback","addCallback","event","error","SharedDesk","incomingCall","setIncomingCall","setIncomingCallRoom","setIncomingCaller","otherUsers","setOtherUsers","setAllUsers","socketIOClient","socket","callAll","hangUp","emit","data","users","others","item","caller","otherUser","class","backgroundColor","paddingBottom","length","index","right","top","position","Chance","require","VideoChat","chance","setUsername","word","syllables","setRoomName","setToken","useCallback","target","preventDefault","fetch","method","body","JSON","stringify","headers","res","json","App","role","aria-label","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cde9ccf9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Lobby = ({\r\n    username,\r\n    handleUsernameChange,\r\n    roomName,\r\n    handleRoomNameChange,\r\n    handleSubmit\r\n}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Enter a room</h2>\r\n            <div>\r\n                <label htmlFor=\"name\">Your Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"field\"\r\n                    value={username}\r\n                    onChange={handleUsernameChange}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"room\">Room Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"room\"\r\n                    value={roomName}\r\n                    onChange={handleRoomNameChange}\r\n\r\n                />\r\n                Share this with your partner\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Lobby;","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Participant = ({ participant }) => {\r\n  const [videoTracks, setVideoTracks] = useState([]);\r\n  const [audioTracks, setAudioTracks] = useState([]);\r\n\r\n  const videoRef = useRef();\r\n  const audioRef = useRef();\r\n\r\n  const trackpubsToTracks = (trackMap) =>\r\n    Array.from(trackMap.values())\r\n      .map((publication) => publication.track)\r\n      .filter((track) => track !== null);\r\n\r\n  useEffect(() => {\r\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\r\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\r\n\r\n    const trackSubscribed = (track) => {\r\n      if (track.kind === \"video\") {\r\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\r\n      } else if (track.kind === \"audio\") {\r\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\r\n      }\r\n    };\r\n\r\n    const trackUnsubscribed = (track) => {\r\n      if (track.kind === \"video\") {\r\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\r\n      } else if (track.kind === \"audio\") {\r\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\r\n      }\r\n    };\r\n\r\n    participant.on(\"trackSubscribed\", trackSubscribed);\r\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\r\n\r\n    return () => {\r\n      setVideoTracks([]);\r\n      setAudioTracks([]);\r\n      participant.removeAllListeners();\r\n    };\r\n  }, [participant]);\r\n\r\n  useEffect(() => {\r\n    const videoTrack = videoTracks[0];\r\n    if (videoTrack) {\r\n      videoTrack.attach(videoRef.current);\r\n      return () => {\r\n        videoTrack.detach();\r\n      };\r\n    }\r\n  }, [videoTracks]);\r\n\r\n  useEffect(() => {\r\n    const audioTrack = audioTracks[0];\r\n    if (audioTrack) {\r\n      audioTrack.attach(audioRef.current);\r\n      return () => {\r\n        audioTrack.detach();\r\n      };\r\n    }\r\n  }, [audioTracks]);\r\n\r\n  return (\r\n    <div className=\"participant\">\r\n      <h3>{participant.identity}</h3>\r\n      <video ref={videoRef} autoPlay={true} />\r\n      <audio ref={audioRef} autoPlay={true} muted={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Participant;","import React, { useState, useEffect } from 'react';\r\nimport Video from 'twilio-video';\r\nimport Participant from './Participant';\r\n\r\nconst Room = ({ roomName, token, handleLogout, setTalk, talk }) => {\r\n    const [room, setRoom] = useState(null);\r\n    const [participants, setParticipants] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const participantConnected = participant => {\r\n            setParticipants(prevParticipants => [...prevParticipants, participant]);\r\n        };\r\n\r\n        const participantDisconnected = participant => {\r\n            setParticipants(prevParticipants =>\r\n                prevParticipants.filter(p => p !== participant)\r\n            );\r\n        };\r\n\r\n        Video.connect(token, {\r\n            name: roomName\r\n        }).then(room => {\r\n            setRoom(room);\r\n            room.on('participantConnected', participantConnected);\r\n            room.on('participantDisconnected', participantDisconnected);\r\n            room.participants.forEach(participantConnected);\r\n        });\r\n\r\n        return () => {\r\n            setRoom(currentRoom => {\r\n                if (currentRoom && currentRoom.localParticipant.state === 'connected') {\r\n                    currentRoom.localParticipant.tracks.forEach(function (trackPublication) {\r\n                        trackPublication.track.stop();\r\n                    });\r\n                    currentRoom.disconnect();\r\n                    return null;\r\n                } else {\r\n                    return currentRoom;\r\n                }\r\n            });\r\n        };\r\n    }, [roomName, token]);\r\n\r\n    const remoteParticipants = participants.map(participant => (\r\n        <Participant key={participant.sid} participant={participant} />\r\n    ));\r\n\r\n    const handleHangup = () => {\r\n        setTalk(!talk)\r\n    }\r\n\r\n    return (\r\n        <div className=\"room\">\r\n            <h2>Room: {roomName}</h2>\r\n            <div className=\"local-participant\">\r\n                {room ? (\r\n                    <Participant\r\n                        key={room.localParticipant.sid}\r\n                        participant={room.localParticipant}\r\n                    />\r\n                ) : (\r\n                        ''\r\n                    )}\r\n            </div>\r\n            <button onClick={handleHangup} style={{\r\n                margin: \"0 auto\",\r\n                display: \"block\"\r\n            }}>Hangup</button>\r\n            <h3>Remote Participants</h3>\r\n            <div className=\"remote-participants\">{remoteParticipants}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Room;","import annyang from 'annyang'\r\n\r\nclass Annyang {\r\n    // 1\r\n    isSupported() {\r\n        return annyang !== null\r\n    }\r\n\r\n    // 2\r\n    start() {\r\n        if (annyang) {\r\n            annyang.start()\r\n        }\r\n    }\r\n\r\n    // 3\r\n    abort() {\r\n        if (annyang) {\r\n            annyang.abort()\r\n        }\r\n    }\r\n\r\n    // 4\r\n    resume() {\r\n        if (annyang) {\r\n            annyang.resume()\r\n        }\r\n    }\r\n\r\n    // 5\r\n    addCommands(commands) {\r\n        if (annyang) {\r\n            annyang.addCommands(\r\n                commands\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // 6\r\n    addCallback(engineCallback, resultCallback) {\r\n        if (annyang) {\r\n            annyang.addCallback('start', event => engineCallback('on'))\r\n            annyang.addCallback('soundstart', event => engineCallback('listening'))\r\n            annyang.addCallback('end', event => engineCallback('off'))\r\n            annyang.addCallback('error', event => engineCallback(event.error))\r\n            annyang.addCallback('errorNetwork', event => engineCallback('network error'))\r\n            annyang.addCallback('errorPermissionBlocked', event => engineCallback('permission blocked'))\r\n            annyang.addCallback('errorPermissionDenied', event => engineCallback('permission denied'))\r\n            annyang.addCallback('result', event => resultCallback(event))\r\n        }\r\n    }\r\n}\r\n\r\n// 7\r\nexport default new Annyang()","import React, { useState, useEffect } from 'react';\r\nimport Room from './Room';\r\nimport annyang from './Annyang'\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:5000\";\r\n\r\n\r\nconst SharedDesk = ({ roomName, token, handleLogout, username }) => {\r\n\r\n    const [talk, setTalk] = useState(false);\r\n    const [incomingCall, setIncomingCall] = useState(false);\r\n    const [incomingCallRoom, setIncomingCallRoom] = useState(\"\");\r\n    const [incomingCaller, setIncomingCaller] = useState(\"\");\r\n    const [otherUsers, setOtherUsers] = useState([]);\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const [socket, setSocket] = useState(socketIOClient(ENDPOINT))\r\n\r\n    useEffect(() => {\r\n        var otherUser = otherUsers[0] || \"\";\r\n        var commands = {\r\n            \"Hey\": () => {\r\n                callAll();\r\n            },\r\n            'Yes': () => {\r\n                setIncomingCall(false)\r\n                setTalk(true)\r\n            },\r\n            'Hangup': () => { hangUp() }\r\n        };\r\n        annyang.addCommands(commands)\r\n        annyang.start()\r\n\r\n        socket.emit('register', {\r\n            data: { roomName, username }\r\n        });\r\n\r\n\r\n        socket.on(\"user-registered\", data => {\r\n            setAllUsers(data.users);\r\n            var others = data.users.filter(item => item != username)\r\n            setOtherUsers(others)\r\n        });\r\n\r\n        socket.on(\"calls\", data => {\r\n            if (data.data.caller != username) {\r\n                setIncomingCall(true)\r\n                setIncomingCallRoom(data.data.roomName)\r\n                setIncomingCaller(data.data.caller)\r\n            }\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n    const callAll = () => {\r\n        setTalk(true)\r\n        var otherUser = otherUsers[0] || \"\";\r\n        socket.emit('call', {\r\n            data: { roomName, otherUser, caller: username }\r\n        });\r\n        setIncomingCall(false)\r\n    }\r\n\r\n    const hangUp = () => {\r\n        setTalk(false)\r\n        setIncomingCall(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div class=\"container-fluid\">\r\n            <div class=\"container\" style={{ backgroundColor: \"#DCD5CD\", paddingBottom: \"5px\" }}>\r\n\r\n                {otherUsers.length == 0 ?\r\n                    <div>\r\n                        <h3>This desk is empty right now!</h3><br />\r\n                        <p>Ask your partner to join the desk <em>{roomName}</em>.</p>\r\n                    </div>\r\n                    : null}\r\n\r\n                {!talk && otherUsers.length > 0 ?\r\n                    <div>\r\n                        <h3> You are on desk <em>{roomName}</em> with :\r\n                {otherUsers.map((item, index) => (\r\n                            \" \" + item + \",\"\r\n                        ))}\r\n                        </h3>\r\n                        <br />\r\n                        <p> Say <em>\"Hey!\"</em> aloud to talk to them or press the button below. 👇🏽</p>\r\n                        {incomingCall !== true ? <button onClick={() => callAll()}>Hey!</button> : null}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n\r\n            {incomingCall === true && !talk ?\r\n                <div style={{ backgroundColor: \"red\" }}>\r\n                    <h3>Incoming Call!</h3>\r\n                    <h4>Say \"Yes\" to pickup!</h4>\r\n                    <br />\r\n                    <button onClick={() => {\r\n                        setIncomingCall(false)\r\n                        setTalk(true)\r\n                    }}>Yes!</button>\r\n                    <a onClick={() => setIncomingCall(false)}>Close</a>\r\n                </div> : null}\r\n\r\n\r\n            <a onClick={handleLogout} style={{ right: 20, top: 10, position: \"absolute\" }}>Log out</a>\r\n            {talk ? <Room roomName={roomName} token={token} handleLogout={handleLogout} talk={talk} setTalk={setTalk} />\r\n                : null}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SharedDesk;","import React, { useState, useCallback } from 'react';\r\nimport Lobby from './Lobby';\r\nimport Room from './Room';\r\nimport SharedDesk from './SharedDesk';\r\nvar Chance = require('chance');\r\n\r\n\r\nconst VideoChat = () => {\r\n    var chance = new Chance();\r\n    const [username, setUsername] = useState('');\r\n    const [roomName, setRoomName] = useState(chance.word({ syllables: 2 }));\r\n    const [token, setToken] = useState(null);\r\n\r\n    const handleUsernameChange = useCallback(event => {\r\n        setUsername(event.target.value);\r\n    }, []);\r\n\r\n    const handleRoomNameChange = useCallback(event => {\r\n        setRoomName(event.target.value);\r\n    }, []);\r\n\r\n    const handleSubmit = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            const data = await fetch('http://localhost:5000/token-room', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    identity: username,\r\n                    room: roomName\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then(res => res.json());\r\n            setToken(data.token);\r\n        },\r\n        [roomName, username]\r\n    );\r\n\r\n    const handleLogout = useCallback(event => {\r\n        setToken(null);\r\n    }, []);\r\n\r\n    let render;\r\n    if (token) {\r\n        render = (\r\n            <SharedDesk roomName={roomName} token={token} handleLogout={handleLogout} username={username} />\r\n        );\r\n    } else {\r\n        render = (\r\n            <Lobby\r\n                username={username}\r\n                roomName={roomName}\r\n                handleUsernameChange={handleUsernameChange}\r\n                handleRoomNameChange={handleRoomNameChange}\r\n                handleSubmit={handleSubmit}\r\n            />\r\n        );\r\n    }\r\n    return render;\r\n};\r\n\r\nexport default VideoChat;","import React from 'react';\r\nimport './App.css';\r\nimport VideoChat from './VideoChat';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <header>\r\n        <h1>🦃 Hellin' Worki</h1>\r\n      </header>\r\n      <main>\r\n        <VideoChat />\r\n      </main>\r\n      <footer>\r\n        <p>\r\n          Made with{' '}\r\n          <span role=\"img\" aria-label=\"React\">\r\n            ⚛\r\n          </span>{' '}\r\n          by <a href=\"https://twitter.com/_Rohan_Sawant_\">Rohan Sawant</a>\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}